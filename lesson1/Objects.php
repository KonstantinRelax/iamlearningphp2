<!-- 1. Придумать класс, который описывает любую сущность из предметной области интернет-магазинов: продукт, ценник, посылка и т.п. -->
Класс Good - товар    

<!-- 2. Описать свойства класса из п.1 (состояние). -->
private $price - цена товара
private $sale  - находится ли товар в распродаже (размер скидки или 0)
private $place - где товар в данный момент (магазин, склад, едет)

static $count - сколько товаров есть в магазине

<!-- 3. Описать поведение класса из п.1 (методы). -->
_construct(price, sale, place) {
    ...сеттеры
    Good::$count++;
}

getPrice |
getPlace |->геттеры
getSale  |

setPrice |
setPlace |->сеттеры
setSale  |

getCurrentPrice(){
    return getPrice() * (1 - getSale());
}

destruct(){
    Good::$count--;
}

<!-- 4. Придумать наследников класса из п.1. Чем они будут отличаться? -->
class Phone extends Good
class Laptop extends Good
class Computer extends Good

каждый из них имеет свои ндивидуальные технические характеристики (для быстрых сортировок)
отличий в методах не вижу

<!-- 5. Дан код -->
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}

$a1 = new A();
$a2 = new A();
<!-- До этого шага ничего не выводится -->
$a1->foo(); <!-- 1 -->
$a2->foo(); <!-- 2 -->
$a1->foo(); <!-- 3 -->
$a2->foo(); <!-- 4 -->
<!-- так как ++$x сначала инкрементирует а потом выводит -->

<!-- Что он выведет на каждом шаге? Почему? -->

<!-- Немного изменим п.5 -->
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}

$a1 = new A();
$b1 = new B();
$a1->foo(); <!-- 1 --> 
$b1->foo(); <!-- 1 -->
$a1->foo(); <!-- 2 -->
$b1->foo(); <!-- 2 -->
<!-- так как хоть В и имеет статик, но не является экземпляром класса А -->
